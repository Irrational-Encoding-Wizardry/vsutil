# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: cache_vs_compilation
      if: matrix.os == 'ubuntu-latest'
      uses: actions/cache@v2.0.0
      with:
        path: .deps/
        key: deps-compile-${{ matrix.os }}-vs50
      # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
    - name: Compile VapourSynth (Linux)
      if: matrix.os == 'ubuntu-latest' && steps.cache_vs_compilation.outputs.cache-hit != 'true'
      run: |
        mkdir .deps
        pushd .deps
        
        git clone https://github.com/sekrit-twc/zimg.git --branch v2.9 --depth 1
        pushd zimg
        ./autogen.sh
        ./configure --prefix=/usr
        make
        popd
        
        git clone https://github.com/vapoursynth/vapoursynth.git --branch R50 --depth 1
        pushd vapoursynth
        ./autogen.sh
        ./configure --disable-vsscript --disable-python-module --prefix=/usr
        make
        popd
        
        popd
    - name: Install VapourSynth Libs (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        pushd .deps
        pushd zimg
        sudo make install
        popd
        pushd vapoursynth
        sudo make install
        popd
        popd
    - name: Install VapourSynth (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        python -m pip install vapoursynth-portable
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .
    - name: Running tests
      run: |
        python setup.py test
